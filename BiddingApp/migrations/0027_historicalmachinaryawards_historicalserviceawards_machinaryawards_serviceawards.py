# Generated by Django 3.2.3 on 2021-09-18 14:54

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('BiddingApp', '0026_auto_20210918_1658'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceAwards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_rfq_number', models.CharField(max_length=50)),
                ('service_company_code', models.CharField(blank=True, max_length=100, null=True)),
                ('service_company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('service_buyer_bid_quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('service_vendor_bid_quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('service_totalamount', models.CharField(blank=True, max_length=200, null=True)),
                ('service_rfq_title', models.CharField(blank=True, max_length=100, null=True)),
                ('service_rfq_status', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('service_code', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('service_name', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('service_daterange', models.DateField(blank=True, null=True)),
                ('service_description', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('service_awarded_date', models.DateField(auto_now=True, null=True)),
                ('service_publish_date', models.CharField(blank=True, max_length=100, null=True)),
                ('service_deadline_date', models.CharField(blank=True, max_length=100, null=True)),
                ('service_award_status', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.BigIntegerField(blank=True, null=True)),
                ('service_po_status', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('rfq_type', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ServiceAwards',
            },
        ),
        migrations.CreateModel(
            name='MachinaryAwards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machinary_rfq_number', models.CharField(max_length=50)),
                ('machinary_company_code', models.CharField(blank=True, max_length=100, null=True)),
                ('machinary_company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('machinary_buyer_bid_quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('machinary_vendor_bid_quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('machinary_totalamount', models.CharField(blank=True, max_length=200, null=True)),
                ('machinary_rfq_title', models.CharField(blank=True, max_length=100, null=True)),
                ('machinary_rfq_status', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('machinary_code', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('machinary_name', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('machinary_date_range', models.DateField(blank=True, null=True)),
                ('machinary_description', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('machinary_awarded_date', models.DateField(auto_now=True, null=True)),
                ('machinary_publish_date', models.CharField(blank=True, max_length=100, null=True)),
                ('machinary_deadline_date', models.CharField(blank=True, max_length=100, null=True)),
                ('machinary_award_status', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.BigIntegerField(blank=True, null=True)),
                ('machinary_po_status', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('rfq_type', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'MachinaryAwards',
            },
        ),
        migrations.CreateModel(
            name='HistoricalServiceAwards',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('service_rfq_number', models.CharField(max_length=50)),
                ('service_company_code', models.CharField(blank=True, max_length=100, null=True)),
                ('service_company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('service_buyer_bid_quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('service_vendor_bid_quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('service_totalamount', models.CharField(blank=True, max_length=200, null=True)),
                ('service_rfq_title', models.CharField(blank=True, max_length=100, null=True)),
                ('service_rfq_status', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('service_code', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('service_name', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('service_daterange', models.DateField(blank=True, null=True)),
                ('service_description', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('service_awarded_date', models.DateField(blank=True, editable=False, null=True)),
                ('service_publish_date', models.CharField(blank=True, max_length=100, null=True)),
                ('service_deadline_date', models.CharField(blank=True, max_length=100, null=True)),
                ('service_award_status', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('created_by', models.BigIntegerField(blank=True, null=True)),
                ('service_po_status', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('rfq_type', models.CharField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical service awards',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMachinaryAwards',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('machinary_rfq_number', models.CharField(max_length=50)),
                ('machinary_company_code', models.CharField(blank=True, max_length=100, null=True)),
                ('machinary_company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('machinary_buyer_bid_quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('machinary_vendor_bid_quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('machinary_totalamount', models.CharField(blank=True, max_length=200, null=True)),
                ('machinary_rfq_title', models.CharField(blank=True, max_length=100, null=True)),
                ('machinary_rfq_status', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('machinary_code', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('machinary_name', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('machinary_date_range', models.DateField(blank=True, null=True)),
                ('machinary_description', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('machinary_awarded_date', models.DateField(blank=True, editable=False, null=True)),
                ('machinary_publish_date', models.CharField(blank=True, max_length=100, null=True)),
                ('machinary_deadline_date', models.CharField(blank=True, max_length=100, null=True)),
                ('machinary_award_status', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('created_by', models.BigIntegerField(blank=True, null=True)),
                ('machinary_po_status', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('rfq_type', models.CharField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical machinary awards',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
