# Generated by Django 3.2 on 2021-05-28 08:26

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasicCompanyDetails',
            fields=[
                ('company_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('gst_number', models.CharField(max_length=30, unique=True)),
                ('company_name', models.CharField(max_length=200, unique=True)),
                ('company_type', models.CharField(max_length=200)),
                ('listing_date', models.CharField(blank=True, max_length=200)),
                ('pan_number', models.CharField(max_length=30)),
                ('tax_payer_type', models.CharField(max_length=200)),
                ('msme_registered', models.CharField(max_length=20)),
                ('company_established', models.CharField(max_length=200)),
                ('registered_iec', models.CharField(max_length=400)),
                ('industrial_scale', models.CharField(max_length=150)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.BigIntegerField()),
            ],
            options={
                'db_table': 'BasicCompanyDetails',
            },
        ),
        migrations.CreateModel(
            name='SelfRegistration_Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person', models.CharField(max_length=200)),
                ('business_to_serve', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=100)),
                ('nature_of_business', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=800), size=None)),
                ('user_type', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('email_otp', models.CharField(blank=True, max_length=20)),
                ('phone_otp', models.CharField(blank=True, max_length=20)),
                ('profile_cover_photo', models.FileField(null=True, upload_to='static/coverphoto')),
            ],
            options={
                'db_table': 'SelfRegistration_Sample',
            },
        ),
        migrations.CreateModel(
            name='SelfRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contact_person', models.CharField(max_length=200)),
                ('business_to_serve', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=100)),
                ('nature_of_business', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), size=None)),
                ('user_type', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('admin_approve', models.CharField(default='Pending', max_length=50)),
                ('email_otp', models.CharField(blank=True, max_length=20)),
                ('phone_otp', models.CharField(blank=True, max_length=20)),
                ('profile_cover_photo', models.FileField(null=True, upload_to='static/coverphoto')),
                ('registration_status', models.CharField(default='Not Registered', max_length=80)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'SelfRegistration',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ship_address', models.TextField(max_length=500)),
                ('ship_country', models.CharField(max_length=200)),
                ('ship_state', models.CharField(max_length=200)),
                ('ship_city', models.CharField(max_length=200)),
                ('ship_pincode', models.BigIntegerField()),
                ('ship_landmark', models.CharField(blank=True, max_length=50)),
                ('ship_location', models.CharField(blank=True, max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.BigIntegerField()),
                ('company_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RegistrationApp.basiccompanydetails')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ShippingAddress',
            },
        ),
        migrations.CreateModel(
            name='LegalDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=100, null=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='static/legalfiles')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.BigIntegerField()),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'LegalDocuments',
            },
        ),
        migrations.CreateModel(
            name='IndustrialInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nature_of_business', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=800), size=None)),
                ('geographical_area', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('supply_capabilites', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=800), size=None)),
                ('industry_to_serve', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=800), size=None)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.BigIntegerField()),
                ('company_code', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='RegistrationApp.basiccompanydetails')),
                ('updated_by', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'IndustrialInfo',
            },
        ),
        migrations.CreateModel(
            name='IndustrialHierarchy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maincore', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), size=None)),
                ('category', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), size=None)),
                ('subcategory', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), size=None)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.BigIntegerField()),
                ('company_code', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='RegistrationApp.basiccompanydetails')),
                ('updated_by', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'IndustrialHierarchy',
            },
        ),
        migrations.CreateModel(
            name='HistoricalShippingAddress',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('ship_address', models.TextField(max_length=500)),
                ('ship_country', models.CharField(max_length=200)),
                ('ship_state', models.CharField(max_length=200)),
                ('ship_city', models.CharField(max_length=200)),
                ('ship_pincode', models.BigIntegerField()),
                ('ship_landmark', models.CharField(blank=True, max_length=50)),
                ('ship_location', models.CharField(blank=True, max_length=200)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('created_by', models.BigIntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='RegistrationApp.basiccompanydetails')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical shipping address',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSelfRegistration_Sample',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('contact_person', models.CharField(max_length=200)),
                ('business_to_serve', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=100)),
                ('nature_of_business', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=800), size=None)),
                ('user_type', models.CharField(max_length=100)),
                ('phone_number', models.CharField(db_index=True, max_length=15)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('email_otp', models.CharField(blank=True, max_length=20)),
                ('phone_otp', models.CharField(blank=True, max_length=20)),
                ('profile_cover_photo', models.TextField(max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical self registration_ sample',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSelfRegistration',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contact_person', models.CharField(max_length=200)),
                ('business_to_serve', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=100)),
                ('nature_of_business', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), size=None)),
                ('user_type', models.CharField(max_length=100)),
                ('phone_number', models.CharField(db_index=True, max_length=15)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('admin_approve', models.CharField(default='Pending', max_length=50)),
                ('email_otp', models.CharField(blank=True, max_length=20)),
                ('phone_otp', models.CharField(blank=True, max_length=20)),
                ('profile_cover_photo', models.TextField(max_length=100, null=True)),
                ('registration_status', models.CharField(default='Not Registered', max_length=80)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical self registration',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLegalDocuments',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=100, null=True)),
                ('document', models.TextField(blank=True, max_length=100, null=True)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('created_by', models.BigIntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical legal documents',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIndustrialInfo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nature_of_business', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=800), size=None)),
                ('geographical_area', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('supply_capabilites', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=800), size=None)),
                ('industry_to_serve', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=800), size=None)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('created_by', models.BigIntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='RegistrationApp.basiccompanydetails')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical industrial info',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIndustrialHierarchy',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('maincore', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), size=None)),
                ('category', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), size=None)),
                ('subcategory', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), size=None)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('created_by', models.BigIntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='RegistrationApp.basiccompanydetails')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical industrial hierarchy',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBillingAddress',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('bill_address', models.TextField(max_length=500)),
                ('bill_country', models.CharField(max_length=200)),
                ('bill_state', models.CharField(max_length=200)),
                ('bill_city', models.CharField(max_length=200)),
                ('bill_pincode', models.IntegerField()),
                ('bill_landmark', models.CharField(blank=True, max_length=50)),
                ('bill_location', models.CharField(blank=True, max_length=200)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('created_by', models.BigIntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='RegistrationApp.basiccompanydetails')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical billing address',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBasicCompanyDetails',
            fields=[
                ('company_code', models.CharField(db_index=True, max_length=20)),
                ('gst_number', models.CharField(db_index=True, max_length=30)),
                ('company_name', models.CharField(db_index=True, max_length=200)),
                ('company_type', models.CharField(max_length=200)),
                ('listing_date', models.CharField(blank=True, max_length=200)),
                ('pan_number', models.CharField(max_length=30)),
                ('tax_payer_type', models.CharField(max_length=200)),
                ('msme_registered', models.CharField(max_length=20)),
                ('company_established', models.CharField(max_length=200)),
                ('registered_iec', models.CharField(max_length=400)),
                ('industrial_scale', models.CharField(max_length=150)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('created_by', models.BigIntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical basic company details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBankDetails',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('ifsc_code', models.CharField(max_length=40)),
                ('account_number', models.CharField(db_index=True, max_length=40)),
                ('account_type', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=200)),
                ('branch', models.CharField(max_length=50)),
                ('bank_city', models.CharField(max_length=100)),
                ('bank_district', models.CharField(max_length=100)),
                ('bank_state', models.CharField(max_length=100)),
                ('bank_address', models.TextField()),
                ('account_holder_name', models.CharField(max_length=300)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('created_by', models.BigIntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='RegistrationApp.basiccompanydetails')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical bank details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='BillingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_address', models.TextField(max_length=500)),
                ('bill_country', models.CharField(max_length=200)),
                ('bill_state', models.CharField(max_length=200)),
                ('bill_city', models.CharField(max_length=200)),
                ('bill_pincode', models.IntegerField()),
                ('bill_landmark', models.CharField(blank=True, max_length=50)),
                ('bill_location', models.CharField(blank=True, max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.BigIntegerField()),
                ('company_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RegistrationApp.basiccompanydetails')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'BillingAddress',
            },
        ),
        migrations.AddField(
            model_name='basiccompanydetails',
            name='updated_by',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ifsc_code', models.CharField(max_length=40)),
                ('account_number', models.CharField(max_length=40, unique=True)),
                ('account_type', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=200)),
                ('branch', models.CharField(max_length=50)),
                ('bank_city', models.CharField(max_length=100)),
                ('bank_district', models.CharField(max_length=100)),
                ('bank_state', models.CharField(max_length=100)),
                ('bank_address', models.TextField()),
                ('account_holder_name', models.CharField(max_length=300)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.BigIntegerField()),
                ('company_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RegistrationApp.basiccompanydetails')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'BankDetails',
            },
        ),
    ]
